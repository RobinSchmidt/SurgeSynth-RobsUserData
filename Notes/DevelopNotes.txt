This file contains some notes that I take for the workflows for contributing to the Surge 
development. Such a file might be better placed into my fork of the actual Surge code repo, but for 
the time being, I don't want to litter it with that because I don't want it to become part of any
pull requests, so I keep it here.

----------------------------------------------------------------------------------------------------
Building Surge:

The readme file here:

  https://github.com/surge-synthesizer/surge

says that to build Surge on Windows, one should install git and Visual Studio. I always already do 
have that installed on my develop machine anyway, so nothing to do here. Then, one should do:

  git clone https://github.com/surge-synthesizer/surge.git
  cd surge
  git submodule update --init --recursive
  cmake -Bbuild
  cmake --build build --config Release --target surge-staged-assets

from the command line. If Powershell is installed, one can do Shift-Rightclick on an empty section 
in the surge folder content view in the Windows Explorer and the select "Open Powershell window 
here". What then remains it to enter the:

  git submodule update --init --recursive
  cmake -Bbuild
  cmake --build build --config Release --target surge-staged-assets

commands one after another. 

The first one: 

  git submodule update --init --recursive

may take a while and apparently downloads more stuff into the local copy of the repo (TODO: figure 
out what that stuff is and document it here!). The second one:

  cmake -Bbuild

fails with an error saying:

  "The term 'cmake' is not recognized as the name of a cmdlet, function, script file, or operable 
   program."

Hmm...but I do have cmake installed. Maybe the installer didn't set the PATH environment variable? 
But why would it not? OK - let's try something else: Open CMake-GUI, click "Browse Source..." 
button, navigate to the local copy of the repo, currently I have this here:

  C:\Users\rob\data\GitRepos\surge

and set the "Where to build the binaries" field to something like:

  C:/Users/rob/data/GitRepos/surge/build/vs19

then click the "Configure" button, confirm the popup dialog "Build directory does not exist. Should 
I create it?", select the appropriate generator (like Visual Studio 16 2019), keep using the default 
compilers and click "Finish". This takes a while and writes some messages into the bottom view. 
After it's done, the folder

  C:\Users\rob\data\GitRepos\surge\build\vs19

has been created and filled with some stuff and the middle view turns red and allows to select 
various options. Just leave that as is and click "Generate". Now, more files will be created - among 
them is the file:

  C:\Users\rob\data\GitRepos\surge\build\vs19\Surge.sln

Double clicking on it will open it in Visual Studio. This solution contains a lot of projects. 
Right-click on 

  surge-xt  ->  surge_xt_Standalone

and select "Set as StartUp Project" and then hit the green "Play" (= Build + Run) button. Now, the 
build process starts and generates a lot of output messages. The build process takes a 
couple of minutes (5-10 for a debug build). Then Surge fires up. Apparently, it loads the state that
it had when it was closed the last time - and it doesn't matter whether this last-closed instance of
Surge was the self-built one or pre-built binary (assuming that this is installed on the same 
machine - which is the case for me).





----------------------------------------------------------------------------------------------------
Bugs (maybe move to separate textfile):

When closing Surge, the VS output window reveals some memory leaks. The number and kind of them 
seems to depend on what has been done during operation.

When loading it and doing nothing and then closing it, we get 6 leaked objects with 60 bytes each.
When hitting one note before closing, we get an additional 6 objects with 16 bytes each. When 
hitting two notes before closing, we get 12 instead of 6 additional objects with 16 bytes each. It 
looks like MIDI events take 6*16 bytes each and are not deleted properly? There seems to be no open
issue about that in github - at least none labeled as bug-report:

https://github.com/surge-synthesizer/surge/issues?q=is%3Aopen+is%3Aissue+label%3A%22Bug+Report%22

